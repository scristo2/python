class hilo1(threading.Thread):

      def __init__(self, nameHilo):
         threading.Thread.__init__(self, name=nameHilo, target=hilo1.run)
         self.nameHilo = nameHilo


      def run(self):

         self.guardar()



      def guardar(self):

         time.sleep(2)
         print('esto es un hilo de la clase1 %s' %self.getName())




   primera = hilo1('hilo1')
   #primera.setDaemon(True)
   primera.start()
   primera.join()#se une al hilo principal de python,esto quiere decir,que trancure todo iagual,es este caso espera 2 segundos de la funciom guardar
   #imprime el mensaje de abajo de hola me llamo sergio, pero si le quito el join,como tiene quie esparar los dos segundos,
   #en este caso imprime primero el mensaje de hola me llamo sergio, y lugo cuando pasan los 2 seegundo,ejecuta el mensaje de la func guardar
   print('hol ame llamios sergio')  
   
   ###################importante daemon
   ##con esto,se suele usar en gui como tkinter,hacer proceos y te olvidas de ellos, en este ejemplo,
   #mientras abro tkinter como proceso principal,me esta creando un archivo llamado text.txt en segundo plano,muy utli 
   class hilo1(threading.Thread):

      def __init__(self, nameHilo):
         super().__init__(target=self.run, name='hilo1', daemon=True)
         self.nameHilo = nameHilo


      def run(self):

         self.guardar()



      def guardar(self):

         time.sleep(2)
         with open('text.txt', 'w') as code:

            code.write('ssjsjss')
            code.close()



   #primera = hilo1('hilo1')
   #primera.start()
  #el proposito de los deamon, es ejecutar en segundo plano   
   window = tk.Tk()
   window.title('test de hilos')
   window.geometry('500x500')
   primera = hilo1('hilo1')
   primera.start()
   window.mainloop()
