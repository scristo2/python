https://riptutorial.com/tkinter/example/27784/scrolling-a-canvas-widget-horizontally-and-vertically
 def sizeTest(self, event):

       self.canvas.itemconfig(self.test, width=event.width) #itemconfig porque la ventana creada es un item de canvas como digo mas abajo
       


    def create_widgets(self):

        self.canvas = Canvas(self)
        self.scrollcanvas = Scrollbar(self, orient='vertical',command=self.canvas.yview)
        self.frameCanvas = Frame(self.canvas)
        for i in range(10):
            self.button = Button(self.frameCanvas, text='sss')
            self.button.pack()
        self.test = self.canvas.create_window(0,0, anchor='nw', window=self.frameCanvas) #get in var created window canvas
        self.canvas.update_idletasks()
        self.canvas.bind('<Configure>', self.sizeTest) #atribuimos el cambio al camvas ya que la ventana es un item del canvas
        self.canvas.configure(scrollregion=self.canvas.bbox('all'), yscrollcommand=self.scrollcanvas.set, bg='yellow')
        self.canvas.pack(side=LEFT, expand='yes', fill=BOTH)
        self.scrollcanvas.pack(side=RIGHT, fill=Y)

#####muy importante

hacer scroll en x y que el scroll se vaya solo al final  automaticamente a la vez que se van añadiento widgets

1º-primero actualizar el frame donde contiene los widgets(no es el principal en este caso,aqui <Configure> porque 
self.frameContainerOpenedWindowCanvas.bind('<Configure>', lambda x : self.canvasBarOpenedWindows.configure(scrollregion=self.canvasBarOpenedWindows.bbox('all')))

2º-la funcion del boton de mas widgets
 def commandOpenNewWindow(self):

            for i in range(1):
 
             self.test = tk.Button(self.frameContainerOpenedWindowCanvas, text='hellow world')
             self.test.pack(side=tk.LEFT)
             self.canvasBarOpenedWindows.update_idletasks()
             self.canvasBarOpenedWindows.xview_moveto(1) #move the scroll to the end
 
